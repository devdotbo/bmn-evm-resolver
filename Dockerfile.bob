# Single-stage build for consistency
# Unified Bob-Resolver service: acts as both coordinator and taker/acceptor
FROM denoland/deno:alpine-2.4.3

# Install necessary system dependencies
RUN apk add --no-cache tini curl jq

# Set working directory
WORKDIR /app

# Set production environment variables
ENV DENO_NO_UPDATE_CHECK=1
ENV DENO_NO_PROMPT=1
ENV NODE_ENV=production
ENV SERVICE_MODE=bob-resolver
ENV DENO_KV_PATH=/app/data/kv/bob.db

# Copy all source code
COPY --chown=deno:deno . .

# Create necessary directories
RUN mkdir -p /app/data/secrets /app/data/orders /app/data/logs /app/data/kv \
    /app/pending-orders /app/completed-orders && \
    chown -R deno:deno /app/data /app/pending-orders /app/completed-orders

# Cache dependencies as root first
RUN deno cache --unstable-kv --frozen bob-resolver-service.ts

# Then switch to non-root user
USER deno

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8002/health || exit 1

# Use tini to handle signals properly
ENTRYPOINT ["/sbin/tini", "--"]

# Default command
CMD ["deno", "run", \
     "--allow-net", \
     "--allow-env", \
     "--allow-read", \
     "--allow-write", \
     "--unstable-kv", \
     "bob-resolver-service.ts"]