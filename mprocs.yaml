# Bridge-Me-Not Resolver Development Environment
procs:
  # Core Services
  resolver:
    shell: "deno task resolver:start"
    env:
      SERVICE_NAME: "Bob (Resolver)"
    autostart: true
    # Keep alive if it crashes
    restart: true
  
  state-sync:
    shell: "deno task state:watch"
    env:
      SERVICE_NAME: "State Synchronization"
    autostart: true
    restart: true
  
  # Monitoring
  resolver-status:
    shell: "watch -n 5 deno task resolver:status"
    env:
      SERVICE_NAME: "Resolver Status Monitor"
    autostart: false
  
  alice-orders:
    shell: "watch -n 3 deno task alice:list-orders"
    env:
      SERVICE_NAME: "Alice Order Monitor"
    autostart: false
  
  # Interactive Commands
  create-order:
    shell: "deno task alice:create-order --amount 100 --token-a TKA --token-b TKB"
    autostart: false
  
  withdraw:
    shell: |
      order_id=$(jq -r '.orders[0][0] // empty' alice-state.json 2>/dev/null || echo "")
      if [ -z "$order_id" ]; then
        echo "No orders found in alice-state.json"
        exit 1
      fi
      deno task alice:withdraw --order-id "$order_id"
    autostart: false
  
  list-orders:
    shell: "deno task alice:list-orders"
    autostart: false
  
  # Utility Commands
  balances:
    shell: |
      cd ../bmn-evm-contracts
      ./scripts/check-token-balances.sh
    autostart: false
  
  clean-orders:
    shell: "rm -rf data/orders/*.json && echo 'Cleared all order files'"
    autostart: false
  
  tail-logs:
    shell: "tail -f resolver.log"
    autostart: false
  
  test-flow:
    shell: "./scripts/test-flow.sh -y"
    autostart: false
  
  # Chain Management (assumes chains are running in contracts repo)
  check-chains:
    shell: |
      echo "Checking Chain A (localhost:8545)..."
      curl -s -X POST http://localhost:8545 \
        -H "Content-Type: application/json" \
        --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' | jq .
      echo -e "\nChecking Chain B (localhost:8546)..."
      curl -s -X POST http://localhost:8546 \
        -H "Content-Type: application/json" \
        --data '{"jsonrpc":"2.0","method":"eth_blockNumber","params":[],"id":1}' | jq .
    autostart: false

# Configuration
scrollback: 5000
proc_list_width: 25
mouse_scroll_speed: 5

# Keybindings
keymap_procs:
  <C-q>: { c: quit }
  <C-s>: { c: start-proc }
  <C-r>: { c: restart-proc }
  <C-k>: { c: kill-proc }